{
    "states": [
        {
            "transitions": [
                {
                    "event": "incomingMessage"
                },
                {
                    "event": "incomingCall"
                },
                {
                    "event": "incomingRequest"
                },
                {
                    "event": "incomingParent",
                    "next": "initCnt"
                }
            ],
            "type": "trigger",
            "name": "Trigger",
            "properties": {
                "offset": {
                    "y": 0,
                    "x": 0
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "keypress",
                    "next": "splitOnValidationFn"
                },
                {
                    "event": "speech"
                },
                {
                    "event": "timeout",
                    "next": "sayNoInput"
                }
            ],
            "type": "gather-input-on-call",
            "name": "gatherPrompt",
            "properties": {
                "stop_gather": true,
                "language": "en-US",
                "gather_language": "en",
                "say": "{{trigger.parent.parameters.prompt}}",
                "loop": 1,
                "timeout": 5,
                "offset": {
                    "y": 480,
                    "x": 270
                },
                "voice": "Polly.Joanna",
                "speech_timeout": "auto",
                "finish_on_key": "#",
                "profanity_filter": "true"
            }
        },
        {
            "transitions": [
                {
                    "event": "next",
                    "next": "gatherPrompt"
                }
            ],
            "type": "set-variables",
            "name": "initCnt",
            "properties": {
                "variables": [
                    {
                        "key": "cnt",
                        "value": "0"
                    }
                ],
                "offset": {
                    "y": 190,
                    "x": 450
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "noMatch"
                },
                {
                    "conditions": [
                        {
                            "type": "greater_than",
                            "friendly_name": "If value greater_than 2",
                            "arguments": [
                                "{{flow.variables.cnt}}"
                            ],
                            "value": "2"
                        }
                    ],
                    "event": "match",
                    "next": "splitOnNoInputMsgSet"
                },
                {
                    "conditions": [
                        {
                            "type": "less_than",
                            "friendly_name": "If value less_than 3",
                            "arguments": [
                                "{{flow.variables.cnt}}"
                            ],
                            "value": "3"
                        }
                    ],
                    "event": "match",
                    "next": "gatherPrompt"
                }
            ],
            "type": "split-based-on",
            "name": "splitOnMaxTries",
            "properties": {
                "input": "{{flow.variables.cnt}}",
                "offset": {
                    "y": 2500,
                    "x": 330
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "next",
                    "next": "splitOnMaxTries"
                }
            ],
            "type": "set-variables",
            "name": "incrementCnt",
            "properties": {
                "variables": [
                    {
                        "key": "cnt",
                        "value": "{{flow.variables.cnt | plus:1}}"
                    }
                ],
                "offset": {
                    "y": 2190,
                    "x": 120
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "audioComplete",
                    "next": "sayGettingAgent"
                }
            ],
            "type": "say-play",
            "name": "saySorry",
            "properties": {
                "say": "Sorry. I don't understand.",
                "voice": "Polly.Joanna",
                "language": "en-US",
                "loop": 1,
                "offset": {
                    "y": 3270,
                    "x": 230
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "audioComplete",
                    "next": "setResultNM"
                }
            ],
            "type": "say-play",
            "name": "sayNoMatch",
            "properties": {
                "say": "Sorry. That is an invalid value.",
                "voice": "Polly.Joanna",
                "language": "en-US",
                "loop": 1,
                "offset": {
                    "y": 1550,
                    "x": -510
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "audioComplete",
                    "next": "setResultNI"
                }
            ],
            "type": "say-play",
            "name": "sayNoInput",
            "properties": {
                "say": "I'm listening",
                "voice": "Polly.Joanna",
                "language": "en-US",
                "loop": 1,
                "offset": {
                    "y": 990,
                    "x": 670
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "next",
                    "next": "incrementCnt"
                }
            ],
            "type": "set-variables",
            "name": "setResultNM",
            "properties": {
                "variables": [
                    {
                        "key": "result",
                        "value": "NoMatch"
                    }
                ],
                "offset": {
                    "y": 1830,
                    "x": -640
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "next",
                    "next": "incrementCnt"
                }
            ],
            "type": "set-variables",
            "name": "setResultNI",
            "properties": {
                "variables": [
                    {
                        "key": "result",
                        "value": "NoInput"
                    }
                ],
                "offset": {
                    "y": 1290,
                    "x": 580
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "next",
                    "next": "setInput"
                }
            ],
            "type": "set-variables",
            "name": "setResultInput",
            "properties": {
                "variables": [
                    {
                        "key": "result",
                        "value": "Input"
                    }
                ],
                "offset": {
                    "y": 1500,
                    "x": -50
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "next"
                }
            ],
            "type": "set-variables",
            "name": "setInput",
            "properties": {
                "variables": [
                    {
                        "key": "input",
                        "value": "{{widgets.gatherPrompt.Digits}}"
                    }
                ],
                "offset": {
                    "y": 1810,
                    "x": -300
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "noMatch",
                    "next": "saySorry"
                },
                {
                    "conditions": [
                        {
                            "type": "is_not_blank",
                            "friendly_name": "{{trigger.parent.parameters.noInputMsg}}",
                            "arguments": [
                                "{{trigger.parent.parameters.noInputMsg}}"
                            ],
                            "value": "Is Not Blank"
                        }
                    ],
                    "event": "match",
                    "next": "sayNoInputMsg"
                }
            ],
            "type": "split-based-on",
            "name": "splitOnNoInputMsgSet",
            "properties": {
                "input": "{{trigger.parent.parameters.noInputMsg}}",
                "offset": {
                    "y": 2820,
                    "x": 290
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "audioComplete",
                    "next": "sayGettingAgent"
                }
            ],
            "type": "say-play",
            "name": "sayNoInputMsg",
            "properties": {
                "say": "{{trigger.parent.parameters.noInputMsg}}",
                "voice": "Polly.Joanna",
                "language": "en-US",
                "loop": 1,
                "offset": {
                    "y": 3270,
                    "x": 600
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "audioComplete"
                }
            ],
            "type": "say-play",
            "name": "sayFnFailed",
            "properties": {
                "say": "Hmm. The function call failed.",
                "voice": "Polly.Joanna",
                "language": "en-US",
                "loop": 1,
                "offset": {
                    "y": 1260,
                    "x": 140
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "audioComplete"
                }
            ],
            "type": "say-play",
            "name": "sayGettingAgent",
            "properties": {
                "say": "Let me get a human to help.",
                "voice": "Polly.Joanna",
                "language": "en-US",
                "loop": 1,
                "offset": {
                    "y": 3720,
                    "x": 390
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "noMatch",
                    "next": "setResultInput"
                },
                {
                    "conditions": [
                        {
                            "type": "is_not_blank",
                            "friendly_name": "{{trigger.parent.parameters.validationFn}}",
                            "arguments": [
                                "{{trigger.parent.parameters.validationFn}}"
                            ],
                            "value": "Is Not Blank"
                        }
                    ],
                    "event": "match",
                    "next": "validateInput"
                }
            ],
            "type": "split-based-on",
            "name": "splitOnValidationFn",
            "properties": {
                "input": "{{trigger.parent.parameters.validationFn}}",
                "offset": {
                    "y": 730,
                    "x": -110
                }
            }
        },
        {
            "transitions": [
                {
                    "event": "success",
                    "next": "splitOnValidationResult"
                },
                {
                    "event": "fail",
                    "next": "sayFnFailed"
                }
            ],
            "type": "run-function",
            "name": "validateInput",
            "properties": {
                "parameters": [
                    {
                        "key": "endpoint",
                        "value": "{{trigger.parent.parameters.validationFn}}"
                    },
                    {
                        "key": "param",
                        "value": "{{widgets.gatherPrompt.Digits}}"
                    }
                ],
                "url": "https://genericivrfns-4655.twil.io/dataValidator",
                "environment_sid": "ZE823582f61b0d3c329d877da855e910d4",
                "offset": {
                    "y": 1020,
                    "x": 30
                },
                "function_sid": "ZHf99d46791d2d6b35819f39cf42797cbe",
                "service_sid": "ZSb8f3a5b6cd26f9f52867e7155980ad47"
            }
        },
        {
            "transitions": [
                {
                    "event": "noMatch",
                    "next": "sayNoMatch"
                },
                {
                    "conditions": [
                        {
                            "type": "equal_to",
                            "friendly_name": "If value equal_to true",
                            "arguments": [
                                "{{widgets.validateInput.parsed.valid}}"
                            ],
                            "value": "true"
                        }
                    ],
                    "event": "match",
                    "next": "setResultInput"
                }
            ],
            "type": "split-based-on",
            "name": "splitOnValidationResult",
            "properties": {
                "input": "{{widgets.validateInput.parsed.valid}}",
                "offset": {
                    "y": 1250,
                    "x": -420
                }
            }
        }
    ],
    "initial_state": "Trigger",
    "flags": {
        "allow_concurrent_calls": true
    },
    "description": "GenericPrompt"
}